<?xml version="1.0" encoding="UTF-8"?>
<!-- 
                  AT&T License Notice
 
  The contents of this file are subject to the AT&T License
  (the "License"). You may not use this file except in
  compliance with the License. A copy of the License is available at
  http://www.att.com/license/
 
 
  Title: Error Documentation Schema
  Version: 0.2
  @author Ty Showers and Tim Young
 
  Copyright (c) 2012 AT&T. All Rights Reserved.
  
  Revision History
  __________________________________________________________________
  0.2 - ty6368 - 8/17/2012 - The request-header is set to max 1 and thus forces data-fill to create one colelction of Operation elements for each representation format supported.
  0.1 - ts315t - 8/14/2012 - Initial version

 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:verbs="http://developer.att.com/Verb" xmlns:ns1="http://developer.att.com/Request" targetNamespace="http://developer.att.com/Request" elementFormDefault="qualified">
	<xs:import namespace="http://developer.att.com/Verb" schemaLocation="Verb.xsd"/>
	<xs:complexType name="request-parameters">
		<xs:sequence>
			<xs:element name="request-parameter" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="xs:string" minOccurs="1"/>
						<xs:element name="required" type="xs:boolean" minOccurs="1"/>
						<xs:element name="description" type="xs:string" minOccurs="1"/>
						<xs:element name="placement" minOccurs="1">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Header"/>
									<xs:enumeration value="QueryString"/>
									<xs:enumeration value="Body"/>
									<xs:enumeration value="Not applicable"/>
									<!-- callbacks -->
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="request">
		<xs:sequence>
			<xs:element name="body" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<!-- Change 02 - body is set to max 1 to force data-fill to create one collection per rep. format supported. -->
			<xs:element name="request-header" minOccurs="1" maxOccurs="1">
				<!-- Change 02 - body is set to max 1 to force data-fill to create one collection per rep. format supported. -->
				<xs:complexType>
					<xs:sequence>
						<xs:element name="http-verbs" type="verbs:http-verbs" minOccurs="1"/>
						<xs:element name="uri" type="xs:string" minOccurs="1"/>
						<xs:element name="authorization" minOccurs="1">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Not applicable"/>
									<xs:enumeration value="Bearer value_of_access_token"/>
									<!-- Callbacks -->
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="accept" minOccurs="1">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Not applicable"/>
									<xs:enumeration value="application/json"/>
									<xs:enumeration value="application/xml"/>
									<!-- callbacks -->
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="content-type" minOccurs="1">
							<!-- minOc=1 is correct as by convention, the data-fill must create this as an "empty" element when referring to a operation that uses the GET verb. -->
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Do not include. Not applicable with GET requests."/>
									<xs:enumeration value="application/json"/>
									<xs:enumeration value="application/xml"/>
									<xs:enumeration value="application/x-www-form-urlencoded"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="connection-type" minOccurs="1">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="keep-alive"/>
									<xs:enumeration value="close"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
